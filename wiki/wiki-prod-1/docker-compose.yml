networks:
  frontend:
    external: true
  backend:
    external: true
services:

  wiki-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
    logging:
      driver: "none"
    networks:
      - backend
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data

  wiki-prod-1:
    image: ghcr.io/requarks/wiki:2
    container_name: wiki-prod-1
    depends_on:
      - wiki-db
    environment:
      DB_TYPE: ${DB_TYPE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
    networks:
      - frontend
      - backend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wiki-prod-1-http.entrypoints=web"
      - "traefik.http.routers.wiki-prod-1-http.rule=Host(`wiki-prod-1.home.bowen-arrows.net`) || Host(`wiki-prod-1.bowen-arrows.net`)"
      - "traefik.http.routers.wiki-prod-1-https.entrypoints=websecure"
      - "traefik.http.routers.wiki-prod-1-https.rule=Host(`wiki-prod-1.home.bowen-arrows.net`) || Host(`wiki-prod-1.bowen-arrows.net`)"
      - "traefik.http.routers.wiki-prod-1-https.tls=true"
      - "traefik.http.routers.wiki-prod-1-https.tls.certresolver=cloudflare"
      - "traefik.http.routers.wiki-prod-1-https.service=wiki-prod-1-svc"
      - "traefik.http.services.wiki-prod-1-svc.loadBalancer.server.port=3000"

volumes:
  db-data: